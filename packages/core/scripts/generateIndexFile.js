const fs = require('fs');
const path = require('path');

const CONTRACTS = [
  'Active7DaysFundingCycleBallot',
  'FundingCycles',
  'Governance',
  'ModStore',
  'OperatorStore',
  'Prices',
  'Projects',
  'ProxyPaymentAddressManager',
  'TerminalDirectory',
  'TerminalV1',
  'TerminalV1_1',
  'TicketBooth',
];

const generateFileHead = imports => `/**
* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
*/
import { Provider } from '@ethersproject/abstract-provider';
import { Signer } from '@ethersproject/abstract-signer';
import { Contract } from '@ethersproject/contracts';
${imports}
type SignerOrProvider = Signer | Provider;`;

const IMPORTS =
  CONTRACTS.map(
    contractName => `import {
    abi as ${contractName}ABI,
    address as ${contractName}Address,
  } from '@jbx-protocol/contracts-v1/deployments/mainnet/${contractName}.json';`,
  ).join('\n') +
  '\n' +
  `import {
    ${CONTRACTS.join(',\n')}
  } from './types/contracts';\n` +
  `export {
    ${CONTRACTS.join(',\n')}
  } from './types/contracts';\n`;

const HEAD = generateFileHead(IMPORTS);

const contents =
  HEAD +
  '\n' +
  CONTRACTS.map(
    contractName => `export const get${contractName} = (signerOrProvider: SignerOrProvider) =>
new Contract(
  ${contractName}Address,
  ${contractName}ABI,
  signerOrProvider,
) as ${contractName};`,
  ).join('\n');

const createIndexTsFile = () => {
  const filepath = path.resolve(__dirname, `../src/index.ts`);

  fs.writeFileSync(filepath, contents, { flag: 'w' });
};

createIndexTsFile();

console.log('done.');
